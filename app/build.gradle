apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-parcelize'

def ver = rootProject.ext.ver
android {
    compileSdkVersion rootProject.ext.version.compileSdkVersion
    buildToolsVersion "${rootProject.ext.version.buildToolsVersion}"

    defaultConfig {
        applicationId "com.haochang.party.demo"
        minSdkVersion rootProject.ext.version.minSdkVersion
        targetSdkVersion rootProject.ext.version.targetSdkVersion
        versionCode ver.app_code
        versionName ver.app_name

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility 11
        targetCompatibility 11
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    /*kotlin标准库*/
    implementation "org.jetbrains.kotlin:kotlin-stdlib-common:${rootProject.ext.ver.kotlin_version}"
    /*Kotlin标准库 依赖：1、org.jetbrains » annotations 2、org.jetbrains.kotlin » kotlin-stdlib-common*/
    implementation "org.jetbrains.kotlin:kotlin-stdlib:${rootProject.ext.ver.kotlin_version}"
    /*提供Android平台api和特性的向后兼容实现-kotlin版本*/
    /*编译依赖：1、androidx.annotation » annotation 2、androidx.core » core 3、org.jetbrains.kotlin » kotlin-stdlib*/
    implementation "androidx.core:core-ktx:${rootProject.ext.ver.kotlin_core}"
    implementation "androidx.appcompat:appcompat:${rootProject.ext.ver.androidx_compat}"
    implementation "androidx.constraintlayout:constraintlayout:${rootProject.ext.ver.androidx_constraint}"
    implementation "androidx.coordinatorlayout:coordinatorlayout:${rootProject.ext.ver.androidx_coordinator}"
    implementation "com.google.android.material:material:${rootProject.ext.ver.android_material}"
    implementation project(':base')
//    implementation "${rootProject.ext.groupName.library}:${rootProject.ext.packageName.library_base}:${rootProject.ext.ver.library_base_name}"

//    implementation project(':utils')
    implementation "${rootProject.ext.groupName.library}:${rootProject.ext.packageName.library_utils}:${rootProject.ext.ver.library_utils_name}"

//    implementation project(':view')
    implementation "${rootProject.ext.groupName.library}:${rootProject.ext.packageName.library_view}:${rootProject.ext.ver.library_view_name}"

//    implementation project(':image')
    implementation "${rootProject.ext.groupName.library}:${rootProject.ext.packageName.library_image}:${rootProject.ext.ver.library_image_name}"

//    implementation project(':network')
    implementation "${rootProject.ext.groupName.library}:${rootProject.ext.packageName.library_network}:${rootProject.ext.ver.library_network_name}"

//    implementation project(':permission')
    implementation "${rootProject.ext.groupName.library}:${rootProject.ext.packageName.library_permission}:${rootProject.ext.ver.library_permission_name}"

//    implementation project(':opengl')
    implementation "${rootProject.ext.groupName.library}:${rootProject.ext.packageName.library_opengl}:${rootProject.ext.ver.library_opengl_name}"

    implementation project(':audio')
//    implementation "${rootProject.ext.groupName.library}:${rootProject.ext.packageName.library_audio}:${rootProject.ext.ver.library_audio_name}"

    implementation project(':video')
//    implementation "${rootProject.ext.groupName.library}:${rootProject.ext.packageName.library_video}:${rootProject.ext.ver.library_video_name}"

    testImplementation "junit:junit:${rootProject.ext.ver.junit}"
    androidTestImplementation "androidx.test.ext:junit:${rootProject.ext.ver.android_junit}"
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'

}